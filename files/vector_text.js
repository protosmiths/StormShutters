const VectorText = new (function()
{

	//These are svg code for line characters.  It was generated by export glyphs from Helvetica True Type font as EPS files and
	//parsing those for the SVG codes
	var charSVG =
		[
			["0", "M 326 0 C 150 0 108 161 108 360 C 108 558 150 720 326 720 C 502 720 544 558 544 360 C 544 161 502 0 326 0 Z "],
			["1", "M 278 0 L 278 721 C 278 598 159 569 108 565 C 159 569 278 598 278 721 L 278 0 Z"],
			["2", "M 537 0 L 108 0 C 112 146 190 193 275 249 L 446 363 C 517 412 516 482 516 549 C 516 617 474 727 332 727 C 189 727 136 621 136 521 C 136 621 189 727 332 727 C 474 727 516 617 516 549 C 516 482 517 412 446 363 L 275 249 C 190 193 112 146 108 0 L 537 0 Z "],
			["3", "M 108 181 C 108 74 186 0 314 0 C 442 0 530 53 530 185 C 530 317 452 388 278 388 C 451 387 507 458 507 554 C 507 650 458 725 322 725 C 187 725 122 640 122 544 C 122 640 187 725 322 725 C 458 725 507 650 507 554 C 507 458 451 387 278 388 C 452 388 530 317 530 185 C 530 53 442 0 314 0 C 186 0 108 74 108 181 Z"],
			["4", "M 448 0 L 448 721 L 108 192 L 576 192 L 108 192 L 448 721 L 448 0 Z"],
			["5", "M 513 721 L 213 721 L 133 363 C 190 411 226 440 325 440 C 424 440 536 373 536 233 C 536 172 503 -3 323 -3 C 144 -3 120 100 108 159 C 120 100 144 -3 323 -3 C 503 -3 536 172 536 233 C 536 373 424 440 325 440 C 226 440 190 411 133 363 L 213 721 L 513 721 Z"],
			["6", "M 155 217 C 155 347 246 434 367 434 C 488 434 587 378 587 217 C 587 56 488 0 367 0 C 246 0 159 87 155 217 C 151 347 108 723 388 723 C 540 723 570 640 576 590 C 570 640 540 723 388 723 C 108 723 151 347 155 217 C 159 87 246 0 367 0 C 488 0 587 56 587 217 C 587 378 488 434 367 434 C 246 434 155 347 155 217 Z"],
			["7", "M 238 0 C 240 165 415 520 555 721 L 108 721 L 555 721 C 415 520 240 165 238 0 Z"],
			["8", "M 323 387 C 221 387 137 433 137 553 C 137 673 216 718 323 720 C 430 722 509 673 509 553 C 509 433 425 387 323 387 Z M 323 0 C 205 0 108 56 108 194 C 108 332 193 387 323 387 C 453 387 539 332 539 194 C 539 56 442 0 323 0 Z M 323 387 C 221 387 137 433 137 553 C 137 673 216 718 323 720 C 430 722 509 673 509 553 C 509 433 425 387 323 387 Z M 323 0 C 205 0 108 56 108 194 C 108 332 193 387 323 387 C 453 387 539 332 539 194 C 539 56 442 0 323 0 Z"],
			["9", "M 541 507 C 541 376 449 289 328 289 C 207 289 108 345 108 507 C 108 668 207 725 328 725 C 449 725 537 637 541 507 C 546 376 588 0 307 0 C 155 0 125 84 119 133 C 125 84 155 0 307 0 C 588 0 546 376 541 507 C 537 637 449 725 328 725 C 207 725 108 668 108 507 C 108 345 207 289 328 289 C 449 289 541 376 541 507 Z"],
			["A", "M 108 0 L 394 721 L 681 0 L 394 721 L 108 0 Z M 198 227 L 590 227 L 198 227 Z"],
			["B", "M 216 371 L 493 371 C 637 371 696 458 693 545 C 689 632 628 721 495 721 L 216 721 L 216 0 L 523 0 C 637 0 727 68 727 182 C 725 296 630 371 493 371 C 630 371 725 296 727 182 C 727 68 637 0 523 0 L 216 0 L 216 721 L 495 721 C 628 721 689 632 693 545 C 696 458 637 371 493 371 L 216 371 Z"],
			["C", "M 720 242 C 688 70 584 -8 420 -8 C 221 -8 108 105 108 361 C 108 616 221 730 420 730 C 562 730 660 671 704 543 C 660 671 562 730 420 730 C 221 730 108 616 108 361 C 108 105 221 -8 420 -8 C 584 -8 688 70 720 242 Z"],
			["D", "M 216 0 L 476 0 C 704 0 755 221 749 371 C 743 521 714 721 476 721 L 216 721 L 216 0 Z M 216 0 L 476 0 C 704 0 755 221 749 371 C 743 521 714 721 476 721 L 216 721 L 216 0 Z"],
			["E", "M 682 0 L 216 0 L 216 717 L 682 717 L 216 717 L 216 0 L 682 0 Z M 642 369 L 216 369 L 642 369 Z"],
			["F", "M 216 0 L 216 721 L 663 721 L 216 721 L 216 0 Z M 622 371 L 216 371 L 622 371 Z"],
			["G", "M 455 350 L 712 350 C 712 104 601 -5 424 -5 C 247 -5 108 88 108 361 C 108 635 226 730 424 730 C 565 730 666 681 712 552 C 666 681 565 730 424 730 C 226 730 108 635 108 361 C 108 88 247 -5 424 -5 C 601 -5 712 104 712 350 L 455 350 Z M 712 0 L 712 350 L 712 0 Z"],
			["H", "M 216 0 L 216 720 L 216 399 L 725 399 L 725 720 L 725 0 L 725 399 L 216 399 L 216 0 Z"],
			["I", "M 216 0 L 216 721 L 216 0 Z"],
			["J", "M 459 717 L 458 157 C 458 85 397 1 287 1 C 177 0 108 82 108 157 L 108 231 L 108 157 C 108 82 177 0 287 1 C 397 1 458 85 458 157 L 459 717 Z"],
			["K", "M 216 0 L 216 283 L 400 453 L 739 0 L 400 453 L 691 721 L 216 283 L 216 721 L 216 0 Z"],
			["L", "M 637 0 L 216 0 L 216 721 L 216 0 L 637 0 Z"],
			["M", "M 216 0 L 216 721 L 526 0 L 837 721 L 837 0 L 837 721 L 526 0 L 216 721 L 216 0 Z"],
			["N", "M 216 0 L 216 721 L 730 0 L 730 721 L 730 0 L 216 721 L 216 0 Z"],
			["O", "M 426 -6 C 251 -6 108 90 108 366 C 108 642 251 740 426 740 C 601 740 744 642 744 366 C 744 90 601 -6 426 -6 Z M 426 -6 C 251 -6 108 90 108 366 C 108 642 251 740 426 740 C 601 740 744 642 744 366 C 744 90 601 -6 426 -6 Z"],
			["P", "M 216 0 L 216 721 L 446 721 C 629 721 673 633 678 536 C 682 439 627 338 465 338 L 216 338 L 465 338 C 630 338 682 439 678 536 C 673 633 631 721 446 721 L 216 721 L 216 0 Z"],
			["Q", "M 426 -15 C 251 -15 108 81 108 358 C 108 633 251 731 426 731 C 601 731 744 633 744 358 C 744 81 601 -15 426 -15 Z M 426 -15 C 251 -15 108 81 108 358 C 108 633 251 731 426 731 C 601 731 744 633 744 358 C 744 81 601 -15 426 -15 Z M 526 129 L 730 -39 L 526 129 Z"],
			["R", "M 729 0 C 709 14 704 42 704 54 L 686 236 C 680 314 624 368 513 368 C 624 368 680 314 686 236 L 704 54 C 704 42 709 14 729 0 Z M 216 0 L 216 721 L 479 721 C 659 721 702 658 707 561 C 711 464 659 368 499 368 L 216 368 L 499 368 C 662 368 711 464 707 561 C 702 658 663 721 479 721 L 216 721 L 216 0 Z"],
			["S", "M 108 218 C 108 58 230 -6 373 -6 C 518 -6 609 85 612 174 C 615 262 572 332 481 351 L 236 404 C 165 420 126 459 126 553 C 126 647 205 728 349 728 C 493 728 598 660 594 541 C 598 660 493 728 349 728 C 205 728 126 647 126 553 C 126 459 167 419 236 404 L 481 351 C 570 332 615 262 612 174 C 609 85 518 -6 373 -6 C 230 -6 108 58 108 218 Z"],
			["T", "M 367 0 L 367 721 L 628 721 L 108 721 L 367 721 L 367 0 Z"],
			["U", "M 615 722 L 615 229 C 615 109 541 0 365 1 C 189 4 108 102 108 229 L 108 722 L 108 229 C 108 102 189 4 365 1 C 541 0 615 109 615 229 L 615 722 Z"],
			["V", "M 632 721 L 370 0 L 108 721 L 370 0 L 632 721 Z"],
			["W", "M 108 721 L 298 0 L 527 721 L 756 0 L 946 721 L 756 0 L 527 721 L 298 0 L 108 721 Z"],
			["X", "M 108 5 L 350 363 L 591 0 L 350 363 L 591 721 L 350 363 L 112 721 L 350 363 L 108 5 Z"],
			["Y", "M 370 0 L 370 347 L 632 721 L 370 347 L 108 721 L 370 347 L 370 0 Z"],
			["Z", "M 128 721 L 624 721 L 108 0 L 655 0 L 108 0 L 624 721 L 128 721 Z"],
			["a", "M 472 131 C 442 88 339 -9 257 -6 C 174 -3 108 23 108 115 C 108 208 164 247 270 257 C 375 267 422 283 472 297 C 422 283 375 267 270 257 C 164 247 108 208 108 115 C 108 23 174 -3 257 -6 C 339 -9 442 88 472 131 Z M 543 0 C 543 0 472 5 472 65 L 472 394 C 472 436 451 516 316 516 C 181 516 131 455 131 392 C 131 455 181 516 316 516 C 451 516 472 436 472 394 L 472 65 C 472 5 543 0 543 0 Z"], ["b", "M 216 724 L 216 0 L 216 724 Z M 428 516 C 311 516 216 459 216 258 C 216 58 311 0 428 0 C 545 0 640 58 640 258 C 640 459 545 516 428 516 Z M 428 516 C 311 516 216 459 216 258 C 216 58 311 0 428 0 C 545 0 640 58 640 258 C 640 459 545 516 428 516 Z"], ["c", "M 515 163 C 512 79 422 0 337 0 C 253 0 108 14 108 265 C 108 515 270 518 341 518 C 412 518 506 463 512 393 C 506 463 412 518 341 518 C 270 518 108 515 108 265 C 108 14 253 0 337 0 C 422 0 512 79 515 163 Z"], ["d", "M 319 516 C 203 516 108 458 108 258 C 108 58 203 0 319 0 C 435 0 531 58 531 258 C 531 458 435 516 319 516 Z M 319 516 C 203 516 108 458 108 258 C 108 58 203 0 319 0 C 435 0 531 58 531 258 C 531 458 435 516 319 516 Z M 532 723 L 532 0 L 532 723 Z"], ["e", "M 109 274 L 556 274 C 556 385 512 527 353 527 C 195 527 108 419 108 254 C 108 88 220 0 353 4 C 487 8 545 112 552 149 C 545 112 487 8 353 4 C 220 0 108 88 108 254 C 108 419 195 527 353 527 C 512 527 556 385 556 274 L 109 274 Z"], ["f", "M 190 0 L 190 513 C 190 659 190 721 301 721 C 190 721 190 659 190 513 L 190 0 Z M 108 513 L 311 513 L 108 513 Z"], ["g", "M 319 518 C 203 518 108 460 108 260 C 108 60 203 2 319 2 C 435 2 531 60 531 260 C 531 460 435 518 319 518 Z M 319 518 C 203 518 108 460 108 260 C 108 60 203 2 319 2 C 435 2 531 60 531 260 C 531 460 435 518 319 518 Z M 138 -104 C 149 -164 222 -198 322 -202 C 424 -205 531 -130 531 -37 L 531 510 L 531 -37 C 531 -130 424 -205 322 -202 C 222 -198 149 -164 138 -104 Z"], ["h", "M 590 0 L 590 351 C 590 442 535 511 428 513 C 319 515 216 449 216 362 C 216 449 319 515 428 513 C 535 511 590 442 590 351 L 590 0 Z M 216 0 L 216 721 L 216 0 Z"], ["i", "M 217 1 C 217 -1 217 514 217 514 L 217 1 Z M 217 704 L 217 722 L 217 704 Z"], ["j", "M 108 -199 C 191 -199 201 -156 201 -101 L 201 515 L 201 -101 C 201 -156 191 -199 108 -199 Z M 201 722 L 201 704 L 201 722 Z"], ["k", "M 216 0 L 216 721 L 216 202 L 538 513 L 354 336 L 572 0 L 354 336 L 216 202 L 216 0 Z"], ["l", "M 216 0 L 216 721 L 216 0 Z"], ["m", "M 901 0 L 901 380 C 901 426 857 512 730 513 C 603 514 557 415 557 323 C 557 415 603 514 730 513 C 857 512 901 426 901 380 L 901 0 Z M 557 0 L 557 380 C 557 426 527 512 400 513 C 273 514 216 415 216 323 C 216 415 273 514 400 513 C 527 512 557 426 557 380 L 557 0 Z M 216 0 L 216 513 L 216 0 Z"], ["n", "M 584 0 L 584 380 C 584 426 538 512 411 513 C 283 514 216 415 216 323 C 216 415 283 514 411 513 C 538 512 584 426 584 380 L 584 0 Z M 216 0 L 216 513 L 216 0 Z"], ["o", "M 335 0 C 211 0 108 59 108 262 C 108 464 211 523 335 523 C 460 523 562 464 562 262 C 562 59 460 0 335 0 Z M 335 0 C 211 0 108 59 108 262 C 108 464 211 523 335 523 C 460 523 562 464 562 262 C 562 59 460 0 335 0 Z"], ["p", "M 428 0 C 312 0 217 59 217 262 C 217 464 312 523 428 523 C 544 523 640 464 640 262 C 640 59 544 0 428 0 Z M 428 0 C 312 0 217 59 217 262 C 217 464 312 523 428 523 C 544 523 640 464 640 262 C 640 59 544 0 428 0 Z M 216 -199 L 216 523 L 216 -199 Z"], ["q", "M 319 -2 C 203 -2 107 56 107 259 C 107 461 203 521 319 521 C 436 521 531 461 531 259 C 531 56 436 -2 319 -2 Z M 319 -2 C 203 -2 107 56 107 259 C 107 461 203 521 319 521 C 436 521 531 461 531 259 C 531 56 436 -2 319 -2 Z M 533 -202 L 533 521 L 533 -202 Z"], ["r", "M 219 262 C 216 377 322 514 415 513 C 322 514 216 377 219 262 Z M 219 0 L 219 513 L 219 0 Z"], ["s", "M 456 421 C 458 446 425 516 299 521 C 173 524 115 484 115 407 C 115 329 180 305 204 298 L 393 242 C 418 236 478 209 478 135 C 478 61 399 0 299 0 C 199 0 108 53 108 131 C 108 53 199 0 299 0 C 399 0 478 61 478 135 C 478 209 418 236 393 242 L 204 298 C 180 305 115 329 115 407 C 115 484 173 524 299 521 C 425 516 458 446 456 421 Z"], ["t", "M 315 5 C 266 2 213 0 213 67 L 213 707 L 213 67 C 213 0 266 2 315 5 Z M 108 518 L 317 518 L 108 518 Z"], ["u", "M 159 515 L 159 134 C 159 88 205 2 332 1 C 460 0 528 99 528 191 C 528 99 460 0 332 1 C 205 2 159 88 159 134 L 159 515 Z M 528 515 L 528 1 L 528 515 Z"], ["v", "M 516 513 L 311 0 L 108 513 L 311 0 L 516 513 Z"], ["w", "M 108 513 L 256 0 L 433 513 L 611 0 L 759 513 L 611 0 L 433 513 L 256 0 L 108 513 Z"], ["x", "M 108 0 L 314 286 L 521 0 L 314 286 L 479 513 L 314 286 L 150 513 L 314 286 L 108 0 Z"], ["y", "M 146 -206 C 213 -227 261 -191 282 -135 L 520 506 L 282 -135 C 261 -191 213 -227 146 -206 Z M 108 510 L 331 -3 L 108 510 Z"], ["z", "M 133 513 L 486 513 L 108 0 L 518 0 L 108 0 L 486 513 L 133 513 Z"], ["(", "M 211 -13 C 143 125 108 187 108 352 C 108 517 154 655 206 734 C 154 655 108 517 108 352 C 108 187 143 125 211 -13 Z"], [")", "M 109 -13 C 178 125 213 187 213 352 C 213 517 167 655 115 734 C 167 655 213 517 213 352 C 213 187 178 125 109 -13 Z"]];

	this.svgText = function(sText, height)
	{
		let split = sText.split('');
		let svg = '';
		let atx = Affine.getIdentityATx();
		for(let iIdx = 0; iIdx < split.length; iIdx++)
		{
			if(split[iIdx] == ' ')
			{
				atx = Affine.affineAppend(atx, Affine.getTranslateATx({x:737, y: 0}));
				continue;
			}
			//console.log('split[iIdx]', split[iIdx]);
			let char = this.fontMap.get(split[iIdx]);
			//console.log('char', char);
			svg += utils.svgTransform(char.svg, atx) + ' ';
			atx = Affine.affineAppend(atx, Affine.getTranslateATx({x:char.width, y: 0}));
		}
		svg = utils.svgTransform(svg, Affine.getScaleATx({x: height/737, y: height/737}));
		return svg;
	}
	
	this.fontMap = new Map();
	
	/*
	* Needs to be called at st start to populate the map
	*/
	this.createFontMap = function()
	{
		for(let iIdx = 0; iIdx < charSVG.length; iIdx++ )
		{
			this.fontMap.set(charSVG[iIdx][0], {svg:charSVG[iIdx][1], width:737});
		}
		this.fontMap.get('0').width = 600;
		this.fontMap.get('1').width = 500;
		this.fontMap.get('I').width = 300;
		this.fontMap.get('J').width = 500;
		this.fontMap.get('M').width = 900;
		this.fontMap.get('N').width = 800;
		this.fontMap.get('W').width = 1000;
		this.fontMap.get('a').width = 600;
		this.fontMap.get('c').width = 600;
		this.fontMap.get('f').width = 500;
		this.fontMap.get('i').width = 300;
		this.fontMap.get('j').width = 400;
		this.fontMap.get('l').width = 300;
		this.fontMap.get('m').width = 900;
		this.fontMap.get('r').width = 600;
		this.fontMap.get('t').width = 400;
		this.fontMap.get('w').width = 900;
	}
	//Call it now
	this.createFontMap();

	return this;
	
})();
